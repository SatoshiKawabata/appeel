// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using UnityEngine;
using System;
public class AccelerationManager
{
	private static AccelerationManager _instance;

	public static AccelerationManager instance() {
		if (_instance == null)
			_instance = new AccelerationManager();
		return _instance;
	}

	private AccelerationManager () {
	}

	public Vector3 getAccelerationRaw() {
		return Input.acceleration;
	}

	public Quaternion getAttitude() {
		#if UNITY_EDITOR
		float x = Mathf.Sin(Time.frameCount * 0.001f) * 360f;
		float y = Mathf.Sin(Time.frameCount * 0.001f) * 360f;
		float z = Mathf.Sin(Time.frameCount * 0.001f) * 360f;
		Quaternion q = new Quaternion();
		q.eulerAngles = new Vector3(x, y, z);
		return q;
		#else
			return Input.gyro.attitude;
		#endif
	}

	public Vector3 getGravityRaw() {
		#if UNITY_EDITOR
		Vector3 temp = new Vector3 (1f, 1f, 1f);
		temp *= Mathf.Sin(Time.frameCount * 0.01f);
		return temp;
		#else
		return Input.gyro.gravity;
		#endif
	}

	public Vector3 getRotationRate() {
		return Input.gyro.rotationRate;
	}

	public Vector3 getRotationRateUnbiased() {
		return Input.gyro.rotationRateUnbiased;
	}
}

